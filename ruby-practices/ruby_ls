#! /usr/bin/env ruby

# frozen_string_literal: true

require 'optparse'
require 'etc'

@arr = []
@base_dir = ''
PERMIT_TABLE = {
  '0' => '---',
  '1' => '--x',
  '2' => '-w-',
  '3' => '-wx',
  '4' => 'r--',
  '5' => 'r-x',
  '6' => 'rw-',
  '7' => 'rwx'
}.freeze
TYPES_TABLE = {
  'file' => '-',
  'directory' => 'd',
  'characterSpecial' => 'c',
  'blockSpecial' => 'b',
  'fifo' => 'f',
  'link' => 'l',
  'socket' => 's'
}.freeze
options = ARGV.getopts('arl')
@base_dir = ARGV[0].nil? ? Dir.getwd : ARGV[0]

def create_files_list
  file_list = Dir.entries(@base_dir)
  file_list.each do |file|
    file = "#{file}/" if Dir.exist?("#{@base_dir}/#{file}")
    @arr.push file
  end
  @arr.sort!
end

def without_a_opt
  @arr.reject! { |list| list.start_with?('.') }
end

def with_r_opt
  @arr.reverse!
end

def without_l_output
  max_length = @arr.max_by(&:length).length
  @arr.map! do |s|
    s.ljust(max_length + 2)
  end

  without_l_opt_show = @arr.each_slice(@arr.length.div(3)).to_a.transpose

  without_l_opt_show.each do |a|
    puts a.join('')
  end
end

def with_l_output
  blocks = 0
  str = ''
  @arr.each do |f|
    stat = File.stat("#{@base_dir}/#{f}")
    blocks += stat.blocks
    mode_arr = stat.mode.to_s(8)[-3, 3].split(//)
    mode = ''
    mode_arr.each do |n|
      mode += PERMIT_TABLE[n]
    end
    type = TYPES_TABLE[stat.ftype]
    nlink = stat.nlink.to_s.rjust(3)
    owner = Etc.getpwuid(stat.uid).name
    gid   = stat.gid
    size  = stat.size.to_s.rjust(6)
    mtime = stat.mtime.strftime('%b %e %H:%M')
    str += "#{type}#{mode} #{nlink} #{owner}  #{gid}#{size} #{mtime} #{f}\n"
  end

  puts "total #{blocks}"
  puts str
end

create_files_list
without_a_opt unless options['a']
with_r_opt if options['r']
options['l'] ? with_l_output : without_l_output
